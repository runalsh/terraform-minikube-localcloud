version: "3.8"

# # docker compose down -v

# # docker compose up -d --force-recreate

# # helm package vault /. --version 1
# # helm push vault-1.tgz oci://localhost:5000/helm/vault
# # docker pull runalsh/pproxy
# # docker tag runalsh/pproxy:latest localhost:5000/local/pproxy:latest2
# # docker push localhost:5000/local/pproxy:latest2

# # docker compose down -v  &&  docker compose up -d --force-recreate

# # docker exec registry registry garbage-collect --delete-untagged /etc/docker/registry/config.yml


# # Copyright VMware, Inc.
# # SPDX-License-Identifier: APACHE-2.0


services:

  registry-harbor:
    image: docker.io/bitnami/harbor-registry:2
    container_name: registry-harbor
    environment:
      - REGISTRY_HTTP_SECRET=fzAYNq8hNEgTxcS
    ports:
      - 5001:5000
    volumes:
      - registry_data:/storage
      - ./harbor/registry/:/etc/registry/:ro

  registryctl:
    image: docker.io/bitnami/harbor-registryctl:2
    environment:
      - CORE_SECRET=fzAYNq8hNEgTxcS
      - JOBSERVICE_SECRET=fzAYNq8hNEgTxcS
      - REGISTRY_HTTP_SECRET=fzAYNq8hNEgTxcS
    volumes:
      - registry_data:/storage
      - ./harbor/registry/:/etc/registry/:ro
      - ./harbor/registryctl/config.yml:/etc/registryctl/config.yml:ro

  postgresql:
    image: docker.io/bitnami/postgresql:16 #postgres:13-alpine
    container_name: harbor-db
    environment:
      - POSTGRESQL_PASSWORD=bitnami
      - POSTGRESQL_DATABASE=registry
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgresql_data:/bitnami/postgresql #postgresql_data:/postgresql

  core:
    image: docker.io/bitnami/harbor-core:2
    container_name: harbor-core
    depends_on:
      - registry-harbor
    environment:
      - CORE_KEY=change-this-key
      - _REDIS_URL_CORE=redis://redis:6379/0
      - SYNC_REGISTRY=false
      - CHART_CACHE_DRIVER=redis
      - _REDIS_URL_REG=redis://redis:6379/1
      - PORT=8080
      - LOG_LEVEL=info
      - EXT_ENDPOINT=http://localhost:5001
      - DATABASE_TYPE=postgresql
      - REGISTRY_CONTROLLER_URL=http://registryctl:8080
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=registry
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=bitnami
      - POSTGRESQL_SSLMODE=disable
      - REGISTRY_URL=http://registry-harbor:5000
      - TOKEN_SERVICE_URL=http://core:8080/service/token
      - HARBOR_ADMIN_PASSWORD=admin
      - CORE_SECRET=fzAYNq8hNEgTxcS
      - JOBSERVICE_SECRET=fzAYNq8hNEgTxcS
      - ADMIRAL_URL=
      - CORE_URL=http://core:8080
      - JOBSERVICE_URL=http://jobservice:8080
      - REGISTRY_STORAGE_PROVIDER_NAME=filesystem
      - REGISTRY_CREDENTIAL_USERNAME=harbor_registry_user
      - REGISTRY_CREDENTIAL_PASSWORD=harbor_registry_password
      - READ_ONLY=false
      - RELOAD_KEY=
    volumes:
      - core_data:/data
      - ./harbor/core/app.conf:/etc/core/app.conf:ro
      - ./harbor/core/private_key.pem:/etc/core/private_key.pem:ro

  portal:
    image: docker.io/bitnami/harbor-portal:2
    container_name: harbor-portal
    depends_on:
      - core

  jobservice:
    image: docker.io/bitnami/harbor-jobservice:2
    container_name: harbor-jobservice
    depends_on:
      - redis
      - core
    environment:
      - CORE_SECRET=fzAYNq8hNEgTxcS
      - JOBSERVICE_SECRET=fzAYNq8hNEgTxcS
      - CORE_URL=http://core:8080
      - REGISTRY_CONTROLLER_URL=http://registryctl:8080
      - REGISTRY_CREDENTIAL_USERNAME=harbor_registry_user
      - REGISTRY_CREDENTIAL_PASSWORD=harbor_registry_password
    volumes:
      - jobservice_data:/var/log/jobs
      - ./harbor/jobservice/config.yml:/etc/jobservice/config.yml:ro

  redis:
    image: docker.io/bitnami/redis:7.4
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes

  harbor-nginx:
    image: docker.io/bitnami/nginx:1.27
    container_name: nginx
    volumes:
      - ./harbor/proxy/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro
    ports:
      - '81:8080'
    depends_on:
      - postgresql
      - registry-harbor
      - core
      - portal

  registry2:
    container_name: registry2
    restart: unless-stopped
    image: registry:2
    ports:
      - 5002:5000
    volumes:
      - registry2data:/var/lib/registry
      - registry2data:/certs
      - ./registry2.yml:/etc/docker/registry/config.yml
      - registry2data:/etc/docker/registry/access
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
      
  registry-ui:
    container_name: registry-ui
    image: joxit/docker-registry-ui:main
    restart: always
    ports:
      - 80:80
    environment:
      - SINGLE_REGISTRY=false
      - REGISTRY_TITLE=Docker Registry UI
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - NGINX_PROXY_PASS_URL=http://localhost:5001
      - DEFAULT_REGISTRIES=http://localhost:5002,http://localhost:5001 #DEFAULT_REGISTRIES=http://registry-harbor:5000,http://registry2:5000
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
      - REGISTRY_ALLOW_DELETE=true

  # portaner:
  #   restart: unless-stopped
  #   image: portainer/portainer-ce:latest
  #   ports:
  #     - 9443:9443
  #   volumes:
  #     - portainer-data:/data
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --admin-password "$$2y$$05$$kvClGmhatZIlunYz332q2ebJKEFSeEdwwRL2BDnbfebJvOHC7GUTy"  #admin : admin
  # command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
  # secrets:
  # - portainer_admin-password

volumes:
  registry_data:
    driver: local
  core_data:
    driver: local
  jobservice_data:
    driver: local
  postgresql_data:
    driver: local
  registry2data:  
    driver: local
  portainer-data:
    driver: local
  nexus-data:
    driver: local
  artifactory:
    driver: local

  # nexus:        #http://localhost:8081/nexus/#welcome   admin:admin123
  #   image: sonatype/nexus3
  #   volumes:
  #     - "nexus-data:/sonatype-work"
  #   ports:
  #     - "8081:8081"
  #     - "8082:8082"
  #     - "8083:8083"
#   artifactory:
#     image: docker.bintray.io/jfrog/artifactory-oss
#     container_name: artifactory
#     ports:
#      - 82:8081
#     volumes:
#      - artifactory:/var/opt/jfrog/artifactory
# #    Add extra Java options by uncommenting the following lines
# #    environment:
# #     - EXTRA_JAVA_OPTIONS=-Xms512m -Xmx4g
#     restart: always
#     ulimits:
#       nproc: 65535
#       nofile:
#         soft: 32000
#         hard: 40000



